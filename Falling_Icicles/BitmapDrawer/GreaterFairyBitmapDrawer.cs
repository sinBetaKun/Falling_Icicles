using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Vortice.DCommon;
using Vortice.Direct2D1;
using Vortice.DXGI;
using Vortice.Mathematics;
using YukkuriMovieMaker.Commons;
using Color = Vortice.Mathematics.Color;

namespace Falling_Icicles.BitmapDrawer
{
    /// <summary>
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// チルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃ
    /// んチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノち
    /// ゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノ
    /// ちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチル
    /// ノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチ
    /// ルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃんチルノちゃん
    /// </summary>
    public class GreaterFairyBitmapDrawer : BitmapDrawerBase
    {
        static readonly int width = 32;
        static readonly int height = 32;
        static readonly int scale = 4;

        static readonly Color[] colors = [
            new (  0,   0,   0,   0),
            new (  0,   0,   0),
            new (132, 231, 189),
            new (247, 231, 222),
            new ( 74, 156, 156),
            new ( 66, 107, 247),
            new (231, 239, 247),
            new ( 41,  82,  99),
            new (247, 181, 173),
            new (206, 148,  57),
            new (247, 198,  82),
            new (247, 247, 247),
            new (206, 198, 247),
            new ( 33,  66, 181),
            new (  0,  90, 123),
            new (239, 132, 132),
            new (247, 206,  49),
            new (198, 206, 222),
            new (165, 156, 206),
            new (181, 173, 222),
            new ( 66, 206, 231),
            new ( 66,  49,   0),
            new (189,  99,  90),
            new (181, 132,  16),
            new (115,  82,  49),
            ];

        static private readonly byte[] labels = [
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 1,10,10,10,10, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 1,10,10, 9,10, 1, 1, 4, 4, 2, 2, 2, 2, 2, 2, 2, 2, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 1, 1, 1,10,10, 9, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 9, 9, 9, 1, 4, 9,10, 7, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 1, 9, 1, 2, 2, 7, 9,10, 4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4, 4, 1, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 2, 2, 2, 2, 7,10, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 7, 1, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 6, 2, 2, 2, 4, 7, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 2, 7, 1, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 2, 6, 6, 2, 7, 2, 2, 6, 6, 6, 2, 6, 2, 6, 6, 2, 6, 6, 4, 2, 2, 2, 1, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 2, 2, 2, 7, 7, 2, 2, 2, 2, 2, 4, 2, 2, 2, 2, 4, 2, 2, 2, 4, 2, 2, 1, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 4, 2, 4, 7, 7, 2, 2, 2, 2, 2, 8, 7, 2, 2, 2, 7, 4, 2, 2, 7, 4, 2, 1, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 4, 4, 7, 4, 7, 4, 2, 2, 2, 7, 3, 8, 4, 2, 2, 8, 7, 2, 2, 7, 7, 4, 1, 0, 0, 0, 0,
            0, 0, 0, 1, 2, 4, 7, 7, 4, 4, 7, 2, 2, 4, 8, 3, 3, 8, 2, 4, 1, 1, 2, 4, 1, 7, 1, 0, 0, 0, 0, 0,
            0, 0, 1, 2, 2, 4, 7, 4, 4, 4, 4, 4, 2, 1, 1, 1, 3, 3, 4, 3, 1,19, 4, 7, 1, 1, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 2, 2, 4, 1, 4, 8, 8, 2, 4, 1,11, 1, 3, 3, 3, 3, 3,14,11, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 2, 2, 4, 1, 4, 4,15, 2, 1,19,14,14, 3, 3, 3, 3, 3,20,11, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 2, 7, 4, 1, 7, 4, 7, 2, 2,11,14,20, 3, 3, 3, 3, 3,14, 3, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 1, 4, 1, 7, 0, 1, 7, 7, 2, 2, 8,14,14, 3, 3, 3, 3, 3, 3, 8, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 1, 0, 1, 0, 0, 1, 7, 4, 2,15, 8, 3, 3, 3, 3, 3, 3, 8, 4, 7, 1, 1, 1, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 7, 7, 2,22,15, 8, 8, 8, 8,15, 1, 9, 9,10,10,10, 1, 0, 0, 0, 0, 0,
            0, 0, 0, 1, 9,10,10,10,10, 9, 9, 9, 1,11,11, 5,12,11,16,11,12, 1, 6, 9, 6,17, 9, 1, 0, 0, 0, 0,
            0, 0, 1, 9, 6, 6,10, 9, 6, 6,17, 1,11,11,13, 5, 5, 5,23,16, 5,12, 1, 6, 6, 1, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 1, 6, 6, 6, 6,17, 1,18,18, 1,13, 5, 5, 5,16,16, 5, 1, 8, 1, 1, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 3, 3, 1,13,13,13, 5, 5, 5, 5, 5,13, 1, 8, 1, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 1,13,13,13, 5, 5, 5, 5, 5, 5, 5, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,13,13,13, 5, 5, 5, 5, 5, 5, 5, 5,12, 1, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,13,18,12, 5, 5,12,11, 5, 5,11,12, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 5,12,12, 5, 5,12,11, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,21, 8, 1, 1, 1, 1, 1,21, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,24, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            ];

        public int X => (int)xList[0];
        public int Y => (int)yList[0];

        public GreaterFairyBitmapDrawer(IGraphicsDevicesAndContext devices, GameViewSource gameViewSource) : base(devices, gameViewSource)
        {
            initialXList.Add(-400);
            initialYList.Add(0);
            initialRotateList.Add(0);
            initialBmIndexListList.Add(0);

            AddNewBitmap(width * scale, height * scale);

            var dc = devices.DeviceContext;

            ID2D1SolidColorBrush[] brushs = [.. colors.Select(i => devices.DeviceContext.CreateSolidColorBrush(i))];

            dc.Target = bitmaps[0];
            dc.BeginDraw();
            dc.Clear(null);
            for (int i = 0; i < height; i++)
                for (int j = 0; j < width; j++)
                    if (labels[i * width + j] > 0)
                        dc.FillRectangle(new Vortice.RawRectF(j * scale, i * scale, (j + 1) * scale, (i + 1) * scale), brushs[labels[i * width + j]]);

            dc.EndDraw();
            dc.Target = null;//Targetは必ずnullに戻す。
            foreach (var item in brushs)
                item?.Dispose();
        }

        public override void UpdatePlace()
        {
            int move_x = (int)gameViewSource.Param.Horizontal.GetValue(gameViewSource.Frame, gameViewSource.Length, gameViewSource.FPS);
            int move_y = (int)gameViewSource.Param.Vertice.GetValue(gameViewSource.Frame, gameViewSource.Length, gameViewSource.FPS);
            if (move_x == 0 || move_y == 0)
            {
                xList[0] += 256f * move_x / gameViewSource.FPS;
                yList[0] += 256f * move_y / gameViewSource.FPS;
            }
            else
            {
                xList[0] += 181f * move_x / gameViewSource.FPS;
                yList[0] += 181f * move_y / gameViewSource.FPS;
            }

            if (gameViewSource.Stage < 2)
            {
                // 端からはみ出た時(X)
                if (xList[0] < GameViewSource.Edge1.X)
                {
                    xList[0] = GameViewSource.Edge1.X;
                }
                else if (xList[0] > GameViewSource.Edge2.X)
                {
                    xList[0] = GameViewSource.Edge2.X;
                }

                // 端からはみ出た時(Y)
                if (yList[0] < GameViewSource.Edge1.Y)
                {
                    yList[0] = GameViewSource.Edge1.Y;
                }
                else if (yList[0] > GameViewSource.Edge2.Y)
                {
                    yList[0] = GameViewSource.Edge2.Y;
                }
            }
        }
    }
}
